package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"github.com/regulatory-transparency-monitor/graph-builder/graph/generated"
	"github.com/regulatory-transparency-monitor/graph-builder/graph/model"
)

// Instance is the resolver for the instance field.
func (r *queryResolver) Instance(ctx context.Context, uuid string) (*model.Instance, error) {
	instance, err := r.Service.FindInstanceByUUID(ctx, uuid)

	if err != nil {
		return nil, err
	}

	return instance, nil
}

// Instances is the resolver for the instances field.
func (r *queryResolver) Instances(ctx context.Context, projectID *string, status *string) ([]*model.Instance, error) {
	panic(fmt.Errorf("not implemented: Instances - instances"))
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
